package org.yarlithub.yschool.repository.model.obj.yschool;

import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Transient;
import org.yarlithub.yschool.repository.model.obj.yschool.iface.IStudentSyncPK;


/** 
 * Object mapping for hibernate-handled table: student_sync.
 * @author autogenerated
 */

@Embeddable
public class StudentSyncPK implements Cloneable, Serializable,  IStudentSyncPK {

	/** Serial Version UID. */
	private static final long serialVersionUID = -558977407L;

	

	/** Field mapping. */
	@Column( name = "class_idstudent", nullable = false  )
	private Integer classIdstudent;

	/** Field mapping. */
	@Column( name = "idstudent_sync", nullable = false  )
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Integer idstudentSync;

	/** Field mapping. */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "student_idstudent", nullable = false , insertable = false, updatable = false )
	private Student studentIdstudent;

 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return StudentSyncPK.class;
	}
 

    /**
     * Return the value associated with the column: classIdstudent.
	 * @return A Integer object (this.classIdstudent)
	 */
	public Integer getClassIdstudent() {
		return this.classIdstudent;
		
	}
	

  
    /**  
     * Set the value related to the column: classIdstudent.
	 * @param classIdstudent the classIdstudent value you wish to set
	 */
	public void setClassIdstudent(final Integer classIdstudent) {
		this.classIdstudent = classIdstudent;
	}

    /**
     * Return the value associated with the column: idstudentSync.
	 * @return A Integer object (this.idstudentSync)
	 */
	public Integer getIdstudentSync() {
		return this.idstudentSync;
		
	}
	

  
    /**  
     * Set the value related to the column: idstudentSync.
	 * @param idstudentSync the idstudentSync value you wish to set
	 */
	public void setIdstudentSync(final Integer idstudentSync) {
		this.idstudentSync = idstudentSync;
	}

    /**
     * Return the value associated with the column: studentIdstudent.
	 * @return A Student object (this.studentIdstudent)
	 */
	public Student getStudentIdstudent() {
		return this.studentIdstudent;
		
	}
	

  
    /**  
     * Set the value related to the column: studentIdstudent.
	 * @param studentIdstudent the studentIdstudent value you wish to set
	 */
	public void setStudentIdstudent(final Student studentIdstudent) {
		this.studentIdstudent = studentIdstudent;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public StudentSyncPK clone() throws CloneNotSupportedException {
		
        final StudentSyncPK copy = (StudentSyncPK)super.clone();

		copy.setClassIdstudent(this.getClassIdstudent());
		copy.setIdstudentSync(this.getIdstudentSync());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("classIdstudent: " + this.getClassIdstudent() + ", ");
		sb.append("idstudentSync: " + this.getIdstudentSync() + ", ");
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		if (aThat == null)  {
			 return false;
		}
		
		final StudentSyncPK that; 
		try {
			that = (StudentSyncPK) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((getClassIdstudent() == null) && (that.getClassIdstudent() == null)) || (getClassIdstudent() != null && getClassIdstudent().equals(that.getClassIdstudent())));
		result = result && (((getIdstudentSync() == null) && (that.getIdstudentSync() == null)) || (getIdstudentSync() != null && getIdstudentSync().equals(that.getIdstudentSync())));
		result = result && (((getStudentIdstudent() == null) && (that.getStudentIdstudent() == null)) || (getStudentIdstudent() != null && getStudentIdstudent().getId().equals(that.getStudentIdstudent().getId())));	
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
	int hash = 0;
		hash = hash + getClassIdstudent().hashCode();
		hash = hash + getIdstudentSync().hashCode();
		hash = hash + getStudentIdstudent().hashCode();
	return hash;
	}
	

	
}
